{{/* vim: set filetype=helm: */}}
{{- define "app.resources.service-account" -}}
{{- if .Values.serviceAccount.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "app.serviceAccountName" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- include "app.labels.component" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.serviceAccount.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
    {{- if .Values.serviceAccount.annotations }}
    {{- include "common.tplvalues.render" (dict "value" .Values.serviceAccount.annotations "context" $) | nindent 4 }}
    {{- end }}
  {{- end }}
automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
{{- end }}
{{- end -}}

{{/* Include the resource */}}
{{- if eq "direct" (include "app.chart.mode" .) -}}
  {{- range $_, $component := concat (list "") $.Values.app.components -}}
    {{- $values := ternary $.Values (get $.Values "component") (eq $component "") | default dict -}}
    {{- include "app.service-account" (dict "component" $component "values" $values "top" $) -}}
  {{- end -}}
{{- end -}}