{{/* vim: set filetype=helm: */}}
{{- define "app.resources.ingress" -}}
{{- if .Values.ingress.enabled }}
---
apiVersion: {{ include "common.capabilities.ingress.apiVersion" . }}
kind: Ingress
metadata:
  name: {{ include "app.fullname" (dict "customName" .Values.ingress.customName "context" .) }}
  namespace: {{ .Values.ingress.namespace | default (include "common.names.namespace" .) | quote }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- include "app.labels.component" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if or .Values.ingress.annotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.ingress.annotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.ingress.annotations "context" $) | nindent 4 }}
    {{- end }}
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  {{- if and .Values.ingress.ingressClassName (eq "true" (include "common.ingress.supportsIngressClassname" .)) }}
  ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
  {{- end }}
  rules:
    {{- if .Values.ingress.hostname }}
    - host: {{ tpl .Values.ingress.hostname $ | quote }}
      http:
        paths:
          {{- range $item := .Values.ingress.extraPaths }}
            {{- with $item }}
          - path: {{ .path }}
            {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
            pathType: {{ .pathType | default $.Values.ingress.pathType }}
            {{- end }}
            backend: {{- include "app.ingress.backend" (dict "backend" .backend "context" $) | nindent 14 }}
            {{- end }}
          {{- end }}
          - path: {{ .Values.ingress.path }}
            {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
            pathType: {{ .Values.ingress.pathType }}
            {{- end }}
            backend: {{- include "app.ingress.backend" (dict "backend" .backend "context" $) | nindent 14 }}
    {{- end }}
    {{- range .Values.ingress.extraHosts }}
    - host: {{ tpl .name $ | quote }}
      http:
        paths:
          - path: {{ default "/" .path }}
            {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
            pathType: {{ default "ImplementationSpecific" .pathType }}
            {{- end }}
            backend: {{- include "app.ingress.backend" (dict "backend" .backend "context" $) | nindent 14 }}
    {{- end }}
    {{- if .Values.ingress.extraRules }}
    {{- include "common.tplvalues.render" (dict "value" .Values.ingress.extraRules "context" $) | nindent 4 }}
    {{- end }}
  {{- if or (and .Values.ingress.tls (or (include "common.ingress.certManagerRequest" ( dict "annotations" .Values.ingress.annotations )) .Values.ingress.selfSigned)) .Values.ingress.extraTls }}
  tls:
    {{- if and .Values.ingress.tls (or (include "common.ingress.certManagerRequest" ( dict "annotations" .Values.ingress.annotations )) .Values.ingress.selfSigned) }}
    - hosts:
        - {{ tpl .Values.ingress.hostname $ | quote }}
      secretName: {{ printf "%s-tls" (tpl .Values.ingress.hostname $) }}
    {{- end }}
    {{- if .Values.ingress.extraTls }}
    {{- include "common.tplvalues.render" (dict "value" .Values.ingress.extraTls "context" $) | nindent 4 }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end -}}

{{/* Include the resource */}}
{{- if eq "direct" (include "app.chart.mode" .) -}}
  {{- range $_, $component := concat (list "") $.Values.app.components -}}
    {{- $values := ternary $.Values (get $.Values "component") (eq $component "") | default dict -}}
    {{- include "app.ingress" (dict "component" $component "values" $values "top" $) -}}
  {{- end -}}
{{- end -}}