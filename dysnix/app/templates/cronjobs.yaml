{{/* vim: set filetype=helm: */}}
{{- define "app.resources.cronjob" -}}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: '{{ include "app.fullname" . }}-{{ ._include.name }}'
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    {{- include "app.labels.component" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  schedule: {{ ._include.data.schedule | quote }}
  {{- with ._include.data.concurrencyPolicy }}
  concurrencyPolicy: {{ . }}
  {{- end }}
  {{- with ._include.data.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with ._include.data.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ . }}
  {{- end }}
  jobTemplate:
    metadata:
      name: '{{ include "app.fullname" . }}-{{ ._include.name }}'
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        {{- include "app.labels.component" . | nindent 8 }}
        {{- if .Values.commonLabels }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
        {{- end }}
    spec:
      {{- with ._include.data.backoffLimit }}
      backoffLimit: {{ . }}
      {{- end }}
      template:
        metadata:
          labels:
            {{- include "common.labels.matchLabels" . | nindent 12 }}
            {{- include "app.labels.component" . | nindent 12 }}
        spec:
          {{- if ._include.data.hostAliases }}
          hostAliases: {{- include "common.tplvalues.render" (dict "value" ._include.data.hostAliases "context" $) | nindent 10 }}
          {{- end }}
          {{- if kindIs "bool" ._include.data.hostNetwork }}
          hostNetwork: {{ ._include.data.hostNetwork }}
          {{- end }}
          {{- if ._include.data.dnsPolicy }}
          dnsPolicy: {{ ._include.data.dnsPolicy }}
          {{- end }}
          {{- if ._include.data.affinity }}
          affinity: {{- include "common.tplvalues.render" (dict "value" ._include.data.affinity "context" $) | nindent 10 }}
          {{- end }}
          {{- if ._include.data.nodeSelector }}
          nodeSelector: {{- include "common.tplvalues.render" ( dict "value" ._include.data.nodeSelector "context" $) | nindent 10 }}
          {{- end }}
          {{- if ._include.data.tolerations }}
          tolerations: {{- include "common.tplvalues.render" (dict "value" ._include.data.tolerations "context" $) | nindent 10 }}
          {{- end }}
          {{- if ._include.data.priorityClassName }}
          priorityClassName: {{ ._include.data.priorityClassName | quote }}
          {{- end }}
          {{- if ._include.data.schedulerName }}
          schedulerName: {{ ._include.data.schedulerName | quote }}
          {{- end }}
          {{- if ._include.data.topologySpreadConstraints }}
          topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" ._include.data.topologySpreadConstraints "context" $) | nindent 10 }}
          {{- end }}
          {{- if ._include.data.podSecurityContext.enabled }}
          securityContext: {{- omit ._include.data.podSecurityContext "enabled" | toYaml | nindent 10 }}
          {{- end }}
          {{- if ._include.data.terminationGracePeriodSeconds }}
          terminationGracePeriodSeconds: {{ ._include.data.terminationGracePeriodSeconds }}
          {{- end }}
          restartPolicy: {{ ._include.data.restartPolicy | default "OnFailure" }}
          serviceAccountName: {{ include "app.serviceAccountName" . }}
          {{- include "app.imagePullSecrets" . | nindent 10 }}
          containers:
          - name: {{ ._include.name }}
            {{- with ._include.data.command }}
            command:
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with ._include.data.args }}
            args:
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with coalesce ._include.data.image .Values.image }}
            image: {{ include "common.images.image" (dict "imageRoot" . "global" $.Values.global) }}
            imagePullPolicy: {{ .pullPolicy }}
            {{- end }}
            {{- if ._include.data.containerSecurityContext.enabled }}
            securityContext: {{- omit ._include.data.containerSecurityContext "enabled" | toYaml | nindent 12 }}
            {{- end }}
            {{- include "app.cronjob.env" ( dict "context" ._include.data "common" .Values "root" $ ) | indent 12 }}
            {{- with ._include.data.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- with ._include.data.volumeMounts }}
            volumeMounts:
            {{- include "app.tplvalues.named-list" (dict "value" . "context" $) | nindent 12 -}}
            {{- end }}
          {{- with ._include.data.volumes }}
          volumes:
          {{- include "app.tplvalues.named-list" (dict "value" . "context" $) | nindent 10 -}}
          {{- end }}
{{- end -}}

{{- define "app.resources.cronjobs" -}}
  {{- range $name, $data := .Values.cronJobs | default dict }}
    {{- if $data.enabled }}
    {{- include "app.resources.include" (dict "resource" "cronjob" "name" $name "data" $data "top" $) }}
    {{- end }}
  {{- end }}
{{- end -}}

{{/* Include the resource */}}
{{- if eq "direct" (include "app.chart.mode" .) -}}
  {{- range $_, $component := concat (list "") $.Values.app.components -}}
    {{- $values := ternary $.Values (get $.Values "component") (eq $component "") | default dict -}}
    {{- include "app.cronjobs" (dict "component" $component "values" $values "top" $) -}}
  {{- end -}}
{{- end -}}
