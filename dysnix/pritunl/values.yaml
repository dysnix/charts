# Default values for pritunl.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicas: 1

image:
  repository: dysnix/pritunl
  tag: v1.29-r8
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

securityContext:
  privileged: true
  capabilities:
    add:
      - NET_ADMIN

## Pritunl service configuration
service:
  ## Can be either "LoadBalancer" or "NodePort"
  type: LoadBalancer
  ## TCP by default, UDP if your cloud provider's LB has support for it
  protocol: TCP
  ## When service.type is "NodePort", we recommend service.port == service.nodePort for proper .ovpn config
  port: 1194
  # nodePort: 30194

  ## Provide any additional annotations which may be required.
  ## The value is evaluated as a template, so, for example, the value can depend on .Release or .Chart
  annotations: {}
  ## Set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  # loadBalancerIP:

  ## Load Balancer sources
  ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ##
  # loadBalancerSourceRanges:
  # - 10.10.10.0/24

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 15
  successThreshold: 1

ingress:
  ## @param ingress.enabled Enable ingress record generation for %%MAIN_CONTAINER_NAME%%
  ##
  enabled: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion:
  ## @param ingress.className Ingress class name
  ##
  className: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: pritunl.local
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Relay on cert-manager to create it by setting the corresponding annotations
  ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: pritunl.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - pritunl.local
  ##   secretName: pritunl.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: pritunl.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []

resources: {}
## We usually recommend not to specify default resources and to leave this as a conscious
## choice for the user. This also increases chances charts run on environments with little
## resources, such as Minikube. If you do want to specify resources, uncomment the following
##  lines, adjust them as necessary, and remove the curly braces after 'resources:'.
## resources:
##   limits:
##     cpu: 100m
##     memory: 128Mi
##   requests:
##     cpu: 100m
##     memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

mongodb:
  enabled: true
  auth:
    enabled: true
    username: pritunl
    database: pritunl

  extraFlags:
    - --wiredTigerCacheSizeGB=0.25

  persistence:
    enabled: true
    size: 1Gi

  strategyType: Recreate

## Custom mongodb URI settings if given
##
mongodbUri:
mongodbUriTemplate:

## /etc/pritunl/conf
##
conf:
  ## Specify host id which preserves settings for the POD in the database
  ##  (no settings a lost on reboot, ex. public_address)
  host_id: ffd7a38db01042cf806760c211ff4a41
  log_path: /var/log/pritunl.log
  static_cache: true
  temp_path: /tmp/pritunl_%r
  bind_addr: "0.0.0.0"
  www_path: /usr/share/pritunl/www
  local_address_interface: auto
  port: 443

logs:
  emptyDir: false
