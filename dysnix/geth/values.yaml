image:
  repository: "ethereum/client-go"
  ## AppVersion is used when not set
  # tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: []

init:
  removeNodeKey: false

proxy:
  enabled: false
  http:
    port: 9545
  ws:
    port: 9546
  otpSecret: "<change-me>"
  image:
    pullPolicy: IfNotPresent
    repository: dysnix/protected-proxy
    tag: latest

p2p:
  service:
    enabled: false
    # can be NodePort or LoadBalancer
    type: LoadBalancer
    loadBalancerIP: ""
    nodePort: ""
    discoveryNodePort: ""
  discoveryPort: 30303
  port: 30303
  # improves p2p connection if autodetection fails. i.e., nat: "extip:1.2.3.4"
  nat: ""
  # if specified, hostPort will be allocated instead of creating k8s service
  useHostPort: false

http:
  port: 8545
  api: "net,eth,personal,web3"
  vhosts: "*"
ws:
  port: 8546
  api: "net,eth,personal,web3"
  origins: "*"
authrpc:
  enabled: false
  port: 8551
  # Use a utility like OpenSSL to create the token via command: openssl rand -hex 32 | tr -d "\n" > "jwt.hex".
  jwtsecret: ""
  jwtpath: /root/jwt/jwt.hex
  vhosts: "*"

networkId: 1
ropsten: false
rinkeby: false
goerli: false

## Snapshot database mode (if not set, not passed)
## true/false
# snapshot:
syncMode: "snap"

maxPeers: 50
maxPendPeers: 0
cache: 4096
customArgs: {}

service:
  type: ClusterIP
  annotations: {}
    # service.beta.kubernetes.io/aws-load-balancer-internal: ...

ingress:
  certmanagerClusterIssuer: ""
  class: nginx
  enabled: false
  rpc:
    annotations:
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, PATCH, OPTIONS, DELETE"
      nginx.ingress.kubernetes.io/cors-allow-origin: "*"
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/session-cookie-change-on-failure: "true"
      nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
      nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
      nginx.ingress.kubernetes.io/session-cookie-name: route
    proxyHosts:
    - rpc.example.com
    hosts:
    - secret-rpc.example.com
  ws:
    annotations: []
    proxyHosts:
    - ws.example.com
    hosts:
    - secret-ws.example.com

persistence:
  # snapshotValue: ""
  size: 400Gi
  # storageClassName:

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 1000m
  #   memory: 2000Mi
  # requests:
  #   cpu: 1000m
  #   memory: 2000Mi

## Autoscaling parameters
##
autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 10
  # targetCPU: 50
  # targetMemory: 50

livenessProbe:
  enabled: false
  initialDelaySeconds: 120
  periodSeconds: 60
  successThreshold: 1
  failureThreshold: 3
  timeoutSeconds: 15
  exec:
    command: |
      - sh
      - -c
      - "echo -e 'POST / HTTP/1.1\nHost: localhost:{{ .Values.http.port }}\nUser-Agent: curl/7.61.1\nAccept: */*\nContent-Type: application/json\nContent-Length: 60\n\n{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":67}' | nc localhost {{ .Values.http.port }} | grep -q 'HTTP/1.1 200 OK' && echo -e 'GET / HTTP/1.1\nHost: localhost:{{ .Values.ws.port }}\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Key: dGhlIHNhbXBsZSBub25jZQ==\nSec-WebSocket-Version: 13\n' | nc localhost {{ .Values.ws.port }} | grep -q 'HTTP/1.1 101'"

readinessProbe:
  enabled: false
  initialDelaySeconds: 60
  periodSeconds: 60
  successThreshold: 1
  failureThreshold: 30
  timeoutSeconds: 10
  exec:
    command: |
      - sh
      - -c
      - "geth {{ if .Values.ropsten }} --ropsten {{ end }} {{ if .Values.rinkeby }} --rinkeby {{ end }} attach --exec '!eth.syncing || eth.syncing.highestBlock-eth.syncing.currentBlock < 100' | grep -q true && return 0 || return 1"

affinity: {}

nodeSelector: {}

tolerations: []

serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 30s
  honorLabels: true
  relabelings: []
  metricRelabelings: []
