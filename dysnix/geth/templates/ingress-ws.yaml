{{- if .Values.ingress.enabled }}
{{- $fullName := include "geth.fullname" . -}}
{{- $svcProxyPort := ternary .Values.proxy.ws.port .Values.ws.port .Values.proxy.enabled -}}
{{- $svcPort := .Values.ws.port -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    {{- if .Values.ingress.certmanagerClusterIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.certmanagerClusterIssuer }}
    {{- end }}
    {{- with .Values.ingress.ws.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    app: {{ template "geth.name" . }}
    chart: {{ template "geth.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "geth.fullname" . }}-geth-ws
spec:
  {{- if (or .Values.ingress.class .Values.ingress.ws.class) }}
  ingressClassName: {{ coalesce .Values.ingress.ws.class .Values.ingress.class }}
  {{- end }}
  rules:
  {{- range .Values.ingress.ws.proxyHosts }}
  - host: {{ . | quote }}
    http:
      paths:
      - backend:
          service:
            name: {{ $fullName }}
            port:
              number: {{ $svcProxyPort }}
        path: /
        pathType: Prefix
  {{- end }}
  {{- range .Values.ingress.ws.hosts }}
  - host: {{ . | quote }}
    http:
      paths:
      - backend:
          service:
            name: {{ $fullName }}
            port:
              number: {{ $svcPort }}
        path: /
        pathType: Prefix
  {{- end }}
  tls:
  - hosts:
    {{- range .Values.ingress.ws.proxyHosts }}
    - {{ . | quote }}
    {{- end }}
    {{- range .Values.ingress.ws.hosts }}
    - {{ . | quote }}
    {{- end }}
    secretName: {{ $fullName }}-ws-tls
{{- end }}
