image:
  repository: 0xpolygon/heimdall
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

updateStrategy:
  type: RollingUpdate

## Ensure we shut down gracefully
terminationGracePeriodSeconds: 600

## Extra pod labels
podLabels: {}
  # environment: production

## This labels mark heimdall node as ready to serve the traffic.
## Used as selector for RPC service together with `.Values.podLabels` and default labels.
podStatusLabels: {}
  # manualstatus: in-service

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # runAsGroup: 1000

## Override heimdall container command (can be templated)
command: []

## Extra container arguments (can be templated)
extraArgs: []

## Extra init containers, can be templated
extraInitContainers: []
  # - name: dumpconfig
  #   image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
  #   imagePullPolicy: "{{ .Values.image.pullPolicy }}"
  #   args: ["dumpconfig"]
  #   volumeMounts:
  #   - name: config
  #     mountPath: /config

## Sidecar containers, can be templated
sidecarContainers: []
  # - name: exporter
  #   image: ethpandaops/ethereum-metrics-exporter:latest
  #   imagePullPolicy: Always
  #   args:
  #   - --execution-url=http://localhost:{{ .Values.containerPorts.rpc.port }}
  #   ports:
  #   - name: exporter
  #     containerPort: 9090

containerPorts:
  rpc:
    enabled: true
    port: 26657
  rest:
    enabled: true
    port: 1317
  metrics:
    enabled: false
    port: 9090
  p2p:
    enabled: true
    port: 30656
    protocol: TCP
    # hostPort: 30656

## Services config
services:
  rpc:
    enabled: true
    type: ClusterIP
    port: 26657
    annotations: {}
  rest:
    enabled: true
    type: ClusterIP
    port: 1317
    annotations: {}
  p2p:
    enabled: true
    type: NodePort
    loadBalancerIP: ""
    port: 30656
    # it's better to set nodePort equal to .Values.containerPorts.p2p.port when the svc type is "NodePort"
    nodePort: 30656
    annotations: {}
    publishNotReadyAddresses: true
  metrics:
    enabled: false
    type: ClusterIP
    port: 9090
    annotations: {}
    publishNotReadyAddresses: true

ingress:
  rpc:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts: []
      # - host: heimdall.local
      #   paths:
      #     - path: /
      #       pathType: ImplementationSpecific
    tls: []
      # - secretName: heimdall-tls
      #   hosts:
      #     - heimdall.local
  rest:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts: []
      # - host: heimdall-rest.local
      #   paths:
      #     - path: /
      #       pathType: ImplementationSpecific
    tls: []
      # - secretName: heimdall-rest-tls
      #   hosts:
      #     - heimdall-rest.local

persistence:
  type: pvc
  # type: hostPath
  pvc:
    size: 700Gi                # downloading and extracting snapshot must be >= (2 * snapshot size)
    accessMode: ReadWriteOnce
    storageClass: ""           # set to "-" if you want to manually create persistent volume
    annotations: {}
  hostPath:
    path: /data/heimdall
    type: Directory            # by default you need to create directory yourself

affinity: {}

nodeSelector: {}

tolerations: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Create Prometheus Operator serviceMonitor
serviceMonitor:
  enabled: false
  # interval: 10s
  # scrapeTimeout: 2s
  # honorLabels: true
  # relabelings: []
  # metricRelabelings: []

# .livenessProbe.exec.command can be either YAML or a templated string
livenessProbe:
  enabled: false
  initialDelaySeconds: 120
  periodSeconds: 60
  successThreshold: 1
  failureThreshold: 3
  timeoutSeconds: 15
  httpGet:
    port: rpc
    path: /status

# .readinessProbe.exec.command can be either YAML or a templated string
readinessProbe:
  enabled: false
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 5
  timeoutSeconds: 10
  exec:
    command: |-
      - sh
      - -c
      - wget -qO- localhost:{{ .Values.containerPorts.rpc.port }}/status | grep "catching_up" | grep -q false

#######
### Init options
#######

init:
  genesis:
    enabled: true
    url: https://raw.githubusercontent.com/maticnetwork/heimdall/master/builder/files/genesis-mainnet-v1.json
  downloadSnapshot:
    enabled: false
    image:
      repository: docker.io/debian
      tag: stable-slim
      pullPolicy: Always

#######
### Polygon network
#######

network: mainnet

#######
### Tendermint config
#######

tendermintConfig:

  # TCP or UNIX socket address of the ABCI application,
  # or the name of an ABCI application compiled in with the Tendermint binary
  proxy_app: "tcp://127.0.0.1:26658"

  # A custom human readable name for this node
  moniker: '{{ include "heimdall.fullname" . }}'

  # If this node is many blocks behind the tip of the chain, FastSync
  # allows them to catchup quickly by downloading blocks in parallel
  # and verifying their commits
  fast_sync: true

  # Database backend: goleveldb | cleveldb | boltdb
  # * goleveldb (github.com/syndtr/goleveldb - most popular implementation)
  #   - pure go
  #   - stable
  # * cleveldb (uses levigo wrapper)
  #   - fast
  #   - requires gcc
  #   - use cleveldb build tag (go build -tags cleveldb)
  # * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)
  #   - EXPERIMENTAL
  #   - may be faster is some use-cases (random reads - indexer)
  #   - use boltdb build tag (go build -tags boltdb)
  db_backend: "goleveldb"

  # Database directory
  db_dir: "data"

  # Output level for logging, including package level options
  log_level: "main:info,state:info,*:error"

  # Output format: 'plain' (colored text) or 'json'
  log_format: "plain"

  ##### additional base config options #####

  # Path to the JSON file containing the initial validator set and other meta data
  genesis_file: "config/genesis.json"

  # Path to the JSON file containing the private key to use as a validator in the consensus protocol
  priv_validator_key_file: "config/priv_validator_key.json"

  # Path to the JSON file containing the last sign state of a validator
  priv_validator_state_file: "data/priv_validator_state.json"

  # TCP or UNIX socket address for Tendermint to listen on for
  # connections from an external PrivValidator process
  priv_validator_laddr: ""

  # Path to the JSON file containing the private key to use for node authentication in the p2p protocol
  node_key_file: "config/node_key.json"

  # Mechanism to connect to the ABCI application: socket | grpc
  abci: "socket"

  # TCP or UNIX socket address for the profiling server to listen on
  prof_laddr: "localhost:6060"

  # If true, query the ABCI app on connecting to a new peer
  # so the app can decide if we should keep the connection or not
  filter_peers: false

  ##### advanced configuration options #####

  ##### rpc server configuration options #####
  rpc:
    # TCP or UNIX socket address for the RPC server to listen on
    laddr: "tcp://0.0.0.0:{{ .Values.containerPorts.rpc.port }}"

    # A list of origins a cross-domain request can be executed from
    # Default value '[]' disables cors support
    # Use '["*"]' to allow any origin
    cors_allowed_origins: []

    # A list of methods the client is allowed to use with cross-domain requests
    cors_allowed_methods: ["HEAD", "GET", "POST"]

    # A list of non simple headers the client is allowed to use with cross-domain requests
    cors_allowed_headers: ["Origin", "Accept", "Content-Type", "X-Requested-With", "X-Server-Time"]

    # TCP or UNIX socket address for the gRPC server to listen on
    # NOTE: This server only supports /broadcast_tx_commit
    grpc_laddr: ""

    # Maximum number of simultaneous connections.
    # Does not include RPC (HTTP&WebSocket) connections. See max_open_connections
    # If you want to accept a larger number than the default, make sure
    # you increase your OS limits.
    # 0 - unlimited.
    # Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
    # 1024 - 40 - 10 - 50: 924: ~900
    grpc_max_open_connections: 900

    # Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool
    unsafe: false

    # Maximum number of simultaneous connections (including WebSocket).
    # Does not include gRPC connections. See grpc_max_open_connections
    # If you want to accept a larger number than the default, make sure
    # you increase your OS limits.
    # 0 - unlimited.
    # Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
    # 1024 - 40 - 10 - 50: 924: ~900
    max_open_connections: 900

    # Maximum number of unique clientIDs that can /subscribe
    # If you're using /broadcast_tx_commit, set to the estimated maximum number
    # of broadcast_tx_commit calls per block.
    max_subscription_clients: 100

    # Maximum number of unique queries a given client can /subscribe to
    # If you're using GRPC (or Local RPC client) and /broadcast_tx_commit, set to
    # the estimated # maximum number of broadcast_tx_commit calls per block.
    max_subscriptions_per_client: 5

    # How long to wait for a tx to be committed during /broadcast_tx_commit.
    # WARNING: Using a value larger than 10s will result in increasing the
    # global HTTP write timeout, which applies to all connections and endpoints.
    # See https://github.com/tendermint/tendermint/issues/3435
    timeout_broadcast_tx_commit: "10s"

    # Maximum size of request body, in bytes
    max_body_bytes: 1000000

    # Maximum size of request header, in bytes
    max_header_bytes: 1048576

    # The path to a file containing certificate that is used to create the HTTPS server.
    # Migth be either absolute path or path related to tendermint's config directory.
    # If the certificate is signed by a certificate authority,
    # the certFile should be the concatenation of the server's certificate, any intermediates,
    # and the CA's certificate.
    # NOTE: both tls_cert_file and tls_key_file must be present for Tendermint to create HTTPS server. Otherwise, HTTP server is run.
    tls_cert_file: ""

    # The path to a file containing matching private key that is used to create the HTTPS server.
    # Migth be either absolute path or path related to tendermint's config directory.
    # NOTE: both tls_cert_file and tls_key_file must be present for Tendermint to create HTTPS server. Otherwise, HTTP server is run.
    tls_key_file: ""

  ##### peer to peer configuration options #####
  p2p:
    # Address to listen for incoming connections
    laddr: "tcp://0.0.0.0:{{ .Values.containerPorts.p2p.port }}"

    # Address to advertise to peers for them to dial
    # If empty, will use the same port as the laddr,
    # and will introspect on the listener or use UPnP
    # to figure out the address.
    external_address: ""

    # Comma separated list of seed nodes to connect to
    seeds: ""

    # Comma separated list of nodes to keep persistent connections to
    persistent_peers: ""

    # UPNP port forwarding
    upnp: false

    # Path to address book
    addr_book_file: "config/addrbook.json"

    # Set true for strict address routability rules
    # Set false for private or local networks
    addr_book_strict: true

    # Maximum number of inbound peers
    max_num_inbound_peers: 40

    # Maximum number of outbound peers to connect to, excluding persistent peers
    max_num_outbound_peers: 10

    # Time to wait before flushing messages out on the connection
    flush_throttle_timeout: "100ms"

    # Maximum size of a message packet payload, in bytes
    max_packet_msg_payload_size: 1024

    # Rate at which packets can be sent, in bytes/second
    send_rate: 5120000

    # Rate at which packets can be received, in bytes/second
    recv_rate: 5120000

    # Set true to enable the peer-exchange reactor
    pex: true

    # Seed mode, in which node constantly crawls the network and looks for
    # peers. If another node asks it for addresses, it responds and disconnects.
    #
    # Does not work if the peer-exchange reactor is disabled.
    seed_mode: false

    # Comma separated list of peer IDs to keep private (will not be gossiped to other peers)
    private_peer_ids: ""

    # Toggle to disable guard against peers connecting from the same ip.
    allow_duplicate_ip: false

    # Peer connection configuration.
    handshake_timeout: "20s"
    dial_timeout: "3s"

  ##### mempool configuration options #####
  mempool:
    recheck: true
    broadcast: true
    wal_dir: ""

    # Maximum number of transactions in the mempool
    size: 5000

    # Limit the total size of all txs in the mempool.
    # This only accounts for raw transactions (e.g. given 1MB transactions and
    # max_txs_bytes=5MB, mempool will only accept 5 transactions).
    max_txs_bytes: 1073741824

    # Size of the cache (used to filter transactions we saw earlier) in transactions
    cache_size: 10000

    # Maximum size of a single transaction.
    # NOTE: the max size of a tx transmitted over the network is {max_tx_bytes} + {amino overhead}.
    max_tx_bytes: 1048576

  ##### fast sync configuration options #####
  fastsync:
    # Fast Sync version to use:
    #   1) "v0" (default) - the legacy fast sync implementation
    #   2) "v1" - refactor of v0 version for better testability
    version: "v0"

  ##### consensus configuration options #####
  consensus:
    wal_file: "data/cs.wal/wal"

    timeout_propose: "3s"
    timeout_propose_delta: "500ms"
    timeout_prevote: "1s"
    timeout_prevote_delta: "500ms"
    timeout_precommit: "1s"
    timeout_precommit_delta: "500ms"
    timeout_commit: "5s"

    # Make progress as soon as we have all the precommits (as if TimeoutCommit: 0)
    skip_timeout_commit: false

    # EmptyBlocks mode and possible interval between empty blocks
    create_empty_blocks: true
    create_empty_blocks_interval: "0s"

    # Reactor sleep duration parameters
    peer_gossip_sleep_duration: "100ms"
    peer_query_maj23_sleep_duration: "2s"

  ##### transactions indexer configuration options #####
  tx_index:

    # What indexer to use for transactions
    #
    # Options:
    #   1) "null"
    #   2) "kv" (default) - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).
    indexer: "kv"

    # Comma-separated list of tags to index (by default the only tag is "tx.hash")
    #
    # You can also index transactions by height by adding "tx.height" tag here.
    #
    # It's recommended to index only a subset of tags due to possible memory
    # bloat. This is, of course, depends on the indexer's DB and the volume of
    # transactions.
    index_tags: ""

    # When set to true, tells indexer to index all tags (predefined tags:
    # "tx.hash", "tx.height" and all tags from DeliverTx responses).
    #
    # Note this may be not desirable (see the comment above). IndexTags has a
    # precedence over IndexAllTags (i.e. when given both, IndexTags will be
    # indexed).
    index_all_tags: true

  ##### instrumentation configuration options #####
  instrumentation:
    # When true, Prometheus metrics are served under /metrics on
    # PrometheusListenAddr.
    # Check out the documentation for the list of available metrics.
    prometheus: false

    # Address to listen for Prometheus collector(s) connections
    prometheus_listen_addr: "0.0.0.0:{{ .Values.containerPorts.metrics.port }}"

    # Maximum number of simultaneous connections.
    # If you want to accept a larger number than the default, make sure
    # you increase your OS limits.
    # 0 - unlimited.
    max_open_connections: 3

    # Instrumentation namespace
    namespace: "tendermint"

#######
### Heimdall config
#######

heimdallConfig:

  # RPC endpoint for ethereum chain
  eth_rpc_url: "http://localhost:9545"

  # RPC endpoint for bor chain
  bor_rpc_url: "http://localhost:8545"

  # RPC endpoint for tendermint
  tendermint_rpc_url: "http://localhost:{{ .Values.containerPorts.rpc.port }}"

  # Polygon Sub Graph URL for self-heal mechanism (optional)
  sub_graph_url: ""

  #### Bridge configs ####

  # Heimdall REST server endpoint, which is used by bridge
  heimdall_rest_server: "http://0.0.0.0:{{ .Values.containerPorts.rest.port }}"

  # AMQP endpoint
  amqp_url: "amqp://guest:guest@localhost:5672/"

  ## Poll intervals
  checkpoint_poll_interval: "5m0s"
  syncer_poll_interval: "1m0s"
  noack_poll_interval: "16m50s"
  clerk_poll_interval: "10s"
  span_poll_interval: "1m0s"
  milestone_poll_interval: "30s"
  enable_self_heal: "false"
  sh_state_synced_interval: "15m0s"
  sh_stake_update_interval: "3h0m0s"
  sh_max_depth_duration: "1h0m0s"


  #### gas limits ####
  main_chain_gas_limit: "5000000"

  #### gas price ####
  main_chain_max_gas_price: "400000000000"

  ##### Timeout Config #####
  no_ack_wait_time: "30m0s"

  ##### chain - newSelectionAlgoHeight depends on this #####
  chain: "{{ .Values.network }}"

#######
### App config
#######

appConfig:

  # The minimum gas prices a validator is willing to accept for processing a
  # transaction. A transaction's fees must meet the minimum of any denomination
  # specified in this config (e.g. 0.25token1;0.0001token2).
  minimum-gas-prices: ""

  # HaltHeight contains a non-zero block height at which a node will gracefully
  # halt and shutdown that can be used to assist upgrades and testing.
  #
  # Note: State will not be committed on the corresponding height and any logs
  # indicating such can be safely ignored.
  halt-height: 0

  # HaltTime contains a non-zero minimum block time (in Unix seconds) at which
  # a node will gracefully halt and shutdown that can be used to assist upgrades
  # and testing.
  #
  # Note: State will not be committed on the corresponding height and any logs
  # indicating such can be safely ignored.
  halt-time: 0
