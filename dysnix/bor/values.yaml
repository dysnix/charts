image:
  repository: 0xpolygon/bor
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

updateStrategy:
  type: RollingUpdate

## Ensure we shut down gracefully
terminationGracePeriodSeconds: 300

## Extra pod labels
podLabels: {}
  # environment: production

## This labels mark bor node as ready to serve the traffic.
## Used as selector for RPC service together with `.Values.podLabels` and default labels.
podStatusLabels: {}
  # manualstatus: in-service

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # runAsGroup: 1000

## By disabling we fix "Unknown config environment variable envvar=GETH_"
## Enable if your workload depends on this functionality
enableServiceLinks: false

## Override bor container command (can be templated)
command: []

## Extra container arguments (can be templated)
extraArgs: []

## Extra init containers, can be templated
extraInitContainers: []
  # - name: dumpconfig
  #   image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
  #   imagePullPolicy: "{{ .Values.image.pullPolicy }}"
  #   command: ["dumpconfig"]
  #   volumeMounts:
  #   - name: config
  #     mountPath: /config

## Sidecar containers, can be templated
sidecarContainers: []
  # - name: exporter
  #   image: ethpandaops/ethereum-metrics-exporter:latest
  #   imagePullPolicy: Always
  #   args:
  #   - --execution-url=http://localhost:{{ .Values.containerPorts.http.port }}
  #   ports:
  #   - name: exporter
  #     containerPort: 9090

containerPorts:
  http:
    enabled: true
    port: 8545
  ws:
    enabled: false
    port: 8546
  metrics:
    enabled: false
    port: 7071
  p2p:
    enabled: true
    port: 30303
    protocol: TCP
    # hostPort: 30303
  p2p-discovery:
    enabled: true
    port: 30303
    protocol: UDP
    # hostPort: 30303

## Services config
services:
  p2p:
    enabled: true
    type: NodePort
    loadBalancerIP: ""
    port: 30303
    # it's better to set nodePort equal to .Values.config.node.p2p.port when the svc type is "NodePort"
    # nodePort: 30303
    annotations: {}
    publishNotReadyAddresses: true
  p2pDiscovery:
    enabled: true
    type: NodePort
    loadBalancerIP: ""
    port: 30303
    # it's better to set nodePort equal to .Values.config.node.p2p.port when the svc type is "NodePort"
    # nodePort: 30303
    annotations: {}
    publishNotReadyAddresses: true
  rpc:
    enabled: true
    type: ClusterIP
    http:
      port: 8545
    ws:
      enabled: false
      port: 8546
    annotations: {}
  metrics:
    enabled: false
    type: ClusterIP
    port: 7071
    annotations: {}
    publishNotReadyAddresses: true
  heimdall:
    enabled: true
    type: ClusterIP
    port: 8545
    annotations: {}
    publishNotReadyAddresses: true

ingress:
  http:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts: []
      # - host: bor.local
      #   paths:
      #     - path: /
      #       pathType: ImplementationSpecific
    tls: []
      # - secretName: bor-tls
      #   hosts:
      #     - bor.local
  ws:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      # cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      # - host: bor-ws.local
      #   paths:
      #     - path: /
      #       pathType: ImplementationSpecific
    tls: []
      # - secretName: bor-ws-tls
      #   hosts:
      #     - bor-ws.local

persistence:
  type: pvc
  # type: hostPath
  pvc:
    size: 4Ti                  # bor full node occupies ~4TB disk space
    accessMode: ReadWriteOnce
    storageClass: ""           # set to "-" if you want to manually create persistent volume
    annotations: {}
  hostPath:
    path: /data/bor
    type: Directory            # by default you need to create directory yourself

affinity: {}

nodeSelector: {}

tolerations: []

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Create Prometheus Operator serviceMonitor
serviceMonitor:
  enabled: false
  # interval: 10s
  # scrapeTimeout: 2s
  # honorLabels: true
  # relabelings: []
  # metricRelabelings: []

# .livenessProbe.exec.command can also be in a templated string format
livenessProbe:
  enabled: false
  initialDelaySeconds: 120
  periodSeconds: 60
  successThreshold: 1
  failureThreshold: 10
  timeoutSeconds: 10
  exec:
    command:
      - sh
      - /scripts/liveness.sh
      - "300"

# .readinessProbe.exec.command can also be in a templated string format
readinessProbe:
  enabled: false
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 2
  timeoutSeconds: 5
  exec:
    command:
      - sh
      - /scripts/readiness.sh
      - "60"

#######
### Bor init containers
#######

init:
  # offline pruning
  pruneState:
    enabled: false
    extraArgs: []
  # download Bor snapshot from official source
  downloadSnapshot:
    enabled: false
    image:
      repository: docker.io/debian
      tag: stable-slim
      pullPolicy: Always
  # download Genesis
  downloadGenesis:
    enabled: true
    url: https://raw.githubusercontent.com/maticnetwork/bor/master/builder/files/genesis-mainnet-v1.json

#######
### Main Bor config, will be converted into Toml format
#######
config:
  chain: mainnet
  identity: '{{ include "bor.fullname" . }}'
  verbosity: 3
  vmdebug: false
  datadir: /data
  ancient: ""
  keystore: ""
  rpc.batchlimit: 100
  rpc.returndatalimit: 100000
  syncmode: full
  gcmode: full
  snapshot: true
  bor.logs: false
  ethstats: ""
  devfakeauthor: false
  eth.requiredblocks: {}
  log:
    vmodule: ""
    json: false
    backtrace: ""
    debug: false
  p2p:
    maxpeers: 50
    maxpendpeers: 50
    bind: 0.0.0.0
    port: "{{ .Values.containerPorts.p2p.port }}"
    nodiscover: false
    nat: any            # set it to "extip:<your-ip>" if p2p is not exposed via hostPort
    netrestrict: ""
    nodekey: ""
    nodekeyhex: ""
    txarrivalwait: 500ms
    discovery:
      v5disc: false
      bootnodes:
        - enode://b8f1cc9c5d4403703fbf377116469667d2b1823c0daf16b7250aa576bacf399e42c3930ccfcb02c5df6879565a2b8931335565f0e8d3f8e72385ecf4a4bf160a@3.36.224.80:30303     # mainnet
        - enode://8729e0c825f3d9cad382555f3e46dcff21af323e89025a0e6312df541f4a9e73abfa562d64906f5e59c51fe6f0501b3e61b07979606c56329c020ed739910759@54.194.245.5:30303    # mainnet
        - enode://76316d1cb93c8ed407d3332d595233401250d48f8fbb1d9c65bd18c0495eca1b43ec38ee0ea1c257c0abb7d1f25d649d359cdfe5a805842159cfe36c5f66b7e8@52.78.36.216:30303    # mainnet
        - enode://681ebac58d8dd2d8a6eef15329dfbad0ab960561524cf2dfde40ad646736fe5c244020f20b87e7c1520820bc625cfb487dd71d63a3a3bf0baea2dbb8ec7c79f1@34.240.245.39:30303   # mainnet
        # - enode://bdcd4786a616a853b8a041f53496d853c68d99d54ff305615cd91c03cd56895e0a7f6e9f35dbf89131044e2114a9a782b792b5661e3aff07faf125a98606a071@43.200.206.40:30303   # mumbai testnet
        # - enode://209aaf7ed549cf4a5700fd833da25413f80a1248bd3aa7fe2a87203e3f7b236dd729579e5c8df61c97bf508281bae4969d6de76a7393bcbd04a0af70270333b3@54.216.248.9:30303    # mumbai testnet
      bootnodesv4: []
      bootnodesv5: []
      static-nodes: []
      trusted-nodes: []
      dns: []
  heimdall:
    url: http://heimdall-rest:1317
    grpc-address: ""
    bor.without: false
    bor.runheimdall: false
    bor.runheimdallargs: ""
    bor.useheimdallapp: false
  txpool:
    locals: []
    nolocals: false
    journal: transactions.rlp
    rejournal: 1h0m0s
    pricelimit: 1
    pricebump: 10
    accountslots: 16
    globalslots: 32768
    accountqueue: 16
    globalqueue: 32768
    lifetime: 3h0m0s
  miner:
    mine: false
    etherbase: ""
    extradata: ""
    gaslimit: 30000000
    gasprice: "1000000000"
    recommit: 2m5s
    commitinterrupt: true
  jsonrpc:
    ipcdisable: false
    ipcpath: ""
    gascap: 50000000
    evmtimeout: 5s
    txfeecap: 5.0
    allow-unprotected-txs: false
    http:
      enabled: true
      port: "{{ .Values.containerPorts.http.port }}"
      prefix: ""
      host: 0.0.0.0
      api: ["eth", "net", "web3"]
      vhosts: ["*"]
      corsdomain: ["*"]
      ep-size: 40
      ep-requesttimeout: 0s
    ws:
      enabled: false
      port: "{{ .Values.containerPorts.ws.port }}"
      prefix: ""
      host: 0.0.0.0
      api: ["eth", "net", "web3"]
      origins: ["*"]
      ep-size: 40
      ep-requesttimeout: 0s
    auth:
      jwtsecret: /secrets/jwt.hex
      addr: 0.0.0.0
      port: 8551
      vhosts: ["*"]
    timeouts:
      read: 10s
      write: 30s
      idle: 2m0s
  gpo:
    blocks: 20
    percentile: 60
    maxheaderhistory: 1024
    maxblockhistory: 1024
    maxprice: "5000000000000"
    ignoreprice: "2"
  telemetry:
    metrics: false
    expensive: false
    prometheus-addr: "0.0.0.0:{{ .Values.containerPorts.metrics.port }}"
    opencollector-endpoint: ""
    influx:
      influxdb: false
      endpoint: ""
      database: ""
      username: ""
      password: ""
      influxdbv2: false
      token: ""
      bucket: ""
      organization: ""
  cache:
    cache: 1024
    gc: 25
    snapshot: 10
    database: 50
    trie: 15
    journal: triecache
    rejournal: 1h0m0s
    noprefetch: false
    preimages: false
    txlookuplimit: 2350000
    triesinmemory: 128
    timeout: 1h0m0s
    fdlimit: 0
  accounts:
    unlock: []
    password: ""
    allow-insecure-unlock: false
    lightkdf: false
    disable-bor-wallet: true
  grpc:
    addr: ":3131"
  developer:
    dev: false
    period: 0
    gaslimit: 11500000
  parallelevm:
    enable: true
    procs: 8
  pprof:
    pprof: false
    port: 6060
    addr: 0.0.0.0
    memprofilerate: 524288
    blockprofilerate: 0
